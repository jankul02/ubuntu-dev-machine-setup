---

# mount /tmp on tmpfs
# - block:
#     - name: clear the existing /tmp dir (1/5)
#       shell: "/bin/rm -rf *"
#       args:
#         chdir: /tmp
#         warn: no

#     - name: copy systemd file (2/5)
#       copy:
#         src: /usr/share/systemd/tmp.mount
#         dest: /lib/systemd/system/tmp.mount
#         remote_src: True

#     - name: create dir /etc/systemd/system/tmp.mount.d (3/5)
#       file:
#         path: /etc/systemd/system/tmp.mount.d
#         state: directory

#     - name: create tmp.mount custom options file (4/5)
#       copy:
#         dest: /etc/systemd/system/tmp.mount.d/options.conf
#         content: |
#           [Mount]
#           Options=mode=1777,strictatime,nosuid,nodev,size=512M

#     - name: start and enable tmp.mount on boot (5/5)
#       systemd:
#         name: tmp.mount
#         enabled: yes
#         state: started
#         daemon_reload: yes


- name: Setting OS version fact
  set_fact:
    osversion: "{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}"


# - name: enable ufw firewall but allow ssh
#   ufw:
#     rule: limit
#     port: ssh
#     proto: tcp
#     state: enabled

# - name: disable system crash reports
#   lineinfile:
#     dest: /etc/default/apport
#     regexp: "^enabled=(0|1)"
#     line: enabled=0
#     state: present

# - name: tune system swappiness
#   sysctl:
#     name: vm.swappiness
#     value: '1'
#     state: present

- name: perform a dist upgrade
  apt:
    update_cache: yes
    upgrade: dist
    force_apt_get: yes

- name: install archiving tools
  apt:
    name: "{{ base_archiving_tools }}"
    state: present
    force_apt_get: yes

# - name: install productivity tools
#   apt:
#     name: "{{ base_productivity_tools }}"
#     state: present
#     force_apt_get: yes

- name: install system tools
  apt:
    name: "{{ base_system_tools }}"
    state: present
    force_apt_get: yes

# - name: install system tools for laptop
#   apt:
#     name: "{{ base_system_tools_laptop }}"
#     state: present
#     force_apt_get: yes
#   when: laptop_mode

- name: install developer tools
  apt:
    name: "{{ base_developer_tools }}"
    state: present
    force_apt_get: yes

- name: Set default text editor to vim
  alternatives:
    name: editor
    path: /usr/bin/vim.basic

# Fix for bat syntax highlighting tool; Ubuntu packages it as batcat instead of just bat
# - name: create symlink for bat
#   file:
#     src: /usr/bin/batcat
#     dest: /usr/bin/bat
#     state: link
#     force: no

# - name: set nc to point to nmap's netcat implementation
#   alternatives:
#     name: nc
#     path: /usr/bin/ncat

- block:
    - name: Create directories for golang
      file:
        path: "~{{ local_username }}/{{ item }}"
        state: directory
      with_items:
        - go
        - go/src
        - go/bin

    - name: Make GOPATH available in .bashrc
      lineinfile:
        path: "~{{ local_username }}/.bashrc"
        line: "{{ item }}"
        create: yes
      with_items:
        - export GOPATH=$HOME/go
        - export PATH=$PATH:$GOPATH/bin
  become: yes
  become_user: "{{ local_username }}"

- name: install download tools
  apt:
    name: "{{ base_download_tools }}"
    state: present
    force_apt_get: yes

# - name: install media packages
#   apt:
#     name: "{{ base_media_tools }}"
#     state: present
#     force_apt_get: yes

- name: Install Libvirt Packages
  apt:
    name: "{{ libvirt_packages }}"
    update_cache: yes
    state: present
    force_apt_get: yes

- name: install virtualization tools
  apt:
    name: "{{ base_virtualization_tools }}"
    state: present
    force_apt_get: yes


- name: install desktop_rdp
  apt:
    name: "{{ desktop_rdp }}"
    update_cache: yes
    state: present
    force_apt_get: yes



- name: adding  user xrdp to group ssl-cert
  user:
    name: xrdp
    groups: ssl-cert
    append: yes

- name: clear xrdp addresses
  lineinfile:
    path: "/etc/xrdp/xrdp.ini"
    regexp: '^(\#?)(address)([[:space:]]*)(\=.*)'   
    state: absent 

- name: xrdp address to local only
  lineinfile:
    path: "/etc/xrdp/xrdp.ini"
    line: "address=127.0.0.1" 
    state: present 


- name: Enable and start gdm3 service
  service:
    name: gdm3
    state: restarted
    enabled: yes

- name: Enable and start xrdp service
  service:
    name: xrdp
    state: restarted
    enabled: yes



# add user to docker group to run docker commands without sudo
# add user to vboxusers group so that user can attach usb devices to guest OS
# - name: add user to docker and vboxusers groups
#   user:
#     name: "{{ local_username }}"
#     append: yes
#     groups:
#       - docker
#       - vboxusers

#- name: install virtualbox extensions pack
#  shell: echo 'y' | vboxmanage extpack install --replace /usr/share/virtualbox-ext-pack/Oracle*

# - block:
#     - name: install openssh-server package (1/2)
#       apt:
#         name: "{{ base_openssh_server.apt_package }}"
#         state: present
#         force_apt_get: yes
#     - name: enable and start ssh (2/2)
#       service:
#         name: "{{ base_openssh_server.service }}"
#         state: started
#         enabled: yes
#   when: not laptop_mode



- name: adding  user '{{ local_username }}' to group libvirt
  user:
    name: '{{ local_username }}'
    groups: libvirt
    append: yes

- name: adding  user '{{ local_username }}' to group kvm
  user:
    name: '{{ local_username }}'
    groups: kvm
    append: yes

- name: Enable and start libvirt service
  service:
    name: libvirtd
    state: restarted
    enabled: yes




...
